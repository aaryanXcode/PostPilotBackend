spring.application.name=postpilot
#spring ai setting
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.com.back.postpilot=DEBUG

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/post_pilot
spring.datasource.username=postgres
spring.datasource.password=aryan
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# spring AI embedding models
spring.ai.ollama.embedding.options.model=mxbai-embed-large:335m
spring.ai.ollama.embedding.model=mxbai-embed-large:335m

# Ollama Chat Settings
spring.ai.ollama.chat.enabled=false
spring.ai.model.embedding=ollama
spring.ai.ollama.init.embedding.include=true
spring.ai.ollama.chat.base-url=http://localhost:11434
spring.ai.ollama.chat.options.model= qwen3:0.6b

#vertex gemini
spring.ai.vertex.ai.gemini.chat.options.model=gemini-2.0-flash
spring.ai.vertex.ai.gemini.chat.options.temperature=0.5

#open Ai chat settings
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.enabled=true
spring.ai.retry.max-attempts=10

# Azure OpenAI settings
spring.ai.azure.openai.api-key=${AZURE_OPENAI_API_KEY}
spring.ai.azure.openai.endpoint=${AZURE_OPENAI_ENDPOINT}
spring.ai.azure.openai.chat.options.deployment-name=${AZURE_OPENAI_DEPLOYMENT_NAME}
spring.ai.azure.openai.chat.options.temperature=0.7
spring.ai.azure.openai.chat.options.max-tokens=2000
spring.ai.azure.openai.chat.enabled=true
spring.ai.azure.openai.image.enabled=true
# Optional: set image deployment if you have one; if missing we'll fallback to Bytez
# spring.ai.azure.openai.image.options.deployment-name=${AZURE_OPENAI_IMAGE_DEPLOYMENT_NAME}
spring.ai.openai.image.enabled=false

# Import config.properties for sensitive data
spring.config.import=optional:classpath:config.properties

# Debug property loading
logging.level.org.springframework.boot.context.config=DEBUG

# Bytez fallback image API
bytez.api.base-url=${BYTEZ_BASE_URL:https://api.bytez.com}
bytez.api.model-path=${BYTEZ_MODEL_PATH:/models/v2/dreamlike-art/dreamlike-photoreal-2.0}
bytez.api.key=${BYTEZ_KEY}

# A4F Images API (a4f.co)
a4f.api.base-url=${A4F_BASE_URL:https://api.a4f.co}
a4f.api.key=${A4F_API_KEY}
a4f.api.model=${A4F_MODEL_ID:provider-4/imagen-4}


#anthropic ai
spring.ai.anthropic.api-key=${ANTHROPIC_API_KEY}

# LinkedIn API Configuration
linkedin.api.client-id=${LINKEDIN_CLIENT_ID}
linkedin.api.client-secret=${LINKEDIN_CLIENT_SECRET}
linkedin.api.redirect-uri=${LINKEDIN_AUTH_URL}
linkedin.api.scope=${LINKEDIN_AUTH_SCOPE}

# Image Storage Configuration
image.upload.directory=uploads/images/
image.serve.url-prefix=/api/images/serve/